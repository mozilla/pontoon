# Generated by Django 3.2.4 on 2021-08-19 13:46

from django.db import migrations

from pontoon.sync import KEY_SEPARATOR


def add_entity_context(apps, schema_editor):
    Entity = apps.get_model("base", "Entity")
    entities = Entity.objects.all().prefetch_related("resource")

    for e in entities:
        if e.resource.format == "lang":
            e.context = ""
        if e.resource.format == "po":
            e.context = e.key.split(KEY_SEPARATOR)[0]
        if e.resource.format == "xliff":
            e.context = e.key.split(KEY_SEPARATOR)[1]
        else:
            e.context = e.key

    Entity.objects.bulk_update(list(entities), ["context",], batch_size=1000)


def remove_entity_context(apps, schema_editor):
    Entity = apps.get_model("base", "Entity")
    entities = Entity.objects.all().prefetch_related("resource")
    entities.update(context="")


class Migration(migrations.Migration):

    dependencies = [
        ("base", "0017_entity_context"),
    ]

    operations = [
        migrations.RunPython(
            code=add_entity_context, reverse_code=remove_entity_context,
        ),
    ]
