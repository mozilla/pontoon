# Generated by Django 3.1.3 on 2020-12-07 19:50

import random

from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta
from django.db import migrations


def add_insights(apps, schema_editor):
    Locale = apps.get_model("base", "Locale")
    LocaleInsightsSnapshot = apps.get_model("insights", "LocaleInsightsSnapshot")

    locale, _ = Locale.objects.get_or_create(code="en-GB")
    snapshots = []

    end_date = datetime.today()
    current_date = end_date - relativedelta(years=1)

    while current_date <= end_date:
        snapshots.append(
            LocaleInsightsSnapshot(
                locale=locale,
                created_at=current_date,
                total_managers=3,
                total_reviewers=5,
                total_contributors=9,
                active_users_last_12_months={
                    "managers": 2,
                    "reviewers": 3,
                    "contributors": 4,
                },
                unreviewed_suggestions_lifespan=random.choice(
                    [
                        timedelta(days=50),
                        timedelta(days=60),
                        timedelta(days=70),
                        timedelta(days=80),
                        timedelta(days=90),
                    ]
                ),
                completion=random.choice([90, 95, 99.5]),
                human_translations=random.choice([0, 10]),
                machinery_translations=random.choice([0, 5]),
                new_source_strings=random.choice([0, 3]),
                unreviewed_strings=random.choice([50, 75, 100]),
                peer_approved=random.choice([0, 5]),
                self_approved=random.choice([0, 5, 10]),
                rejected=random.choice([0, 3]),
                new_suggestions=random.choice([0, 4, 8]),
            )
        )

        current_date += timedelta(days=1)

    LocaleInsightsSnapshot.objects.bulk_create(snapshots)


def remove_insights(apps, schema_editor):
    LocaleInsightsSnapshot = apps.get_model("insights", "LocaleInsightsSnapshot")

    LocaleInsightsSnapshot.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("insights", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(code=add_insights, reverse_code=remove_insights,),
    ]
