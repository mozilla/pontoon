# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-07-28 22:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0106_add_fields_for_singular_forms'),
    ]

    operations = [
        migrations.CreateModel(
            name='EntityTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.TextField()),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='base.Entity')),
            ],
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term_id', models.CharField(max_length=30, unique=True)),
                ('source_term', models.TextField(db_index=True)),
                ('source_term_singulars', models.TextField(db_index=True)),
                ('note', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),

        # GIN Index is introduced in Django 1.11 and doesn't support expressions in postgresql (yet)
        migrations.RunSQL(
            "CREATE INDEX gin_idx_vector_sts  ON terminology_term USING "
            "gin(to_tsvector('simple' :: REGCONFIG, COALESCE(source_term_singulars, '')))",
            "DROP INDEX gin_idx_vector_sts;"
        ),
        migrations.CreateModel(
            name='TermTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('locale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms_translations', to='base.Locale')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='terminology.Term')),
            ],
        ),
        migrations.AddField(
            model_name='entityterm',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='terminology.Term'),
        ),
    ]
