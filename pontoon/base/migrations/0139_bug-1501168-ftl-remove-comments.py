# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-11-22 09:13
from __future__ import unicode_literals

from bulk_update.helper import bulk_update
from django.db import migrations
from fluent.syntax import FluentParser, FluentSerializer


def remove_comments_from_ftl_translations(apps, schema):
    """
    Remove comments from the string column of FTL Translations and Entities,
    and source & target columns of FTL TranslationMemoryEntries.

    See bug 1501168 for more details.
    """
    parser = FluentParser()
    serializer = FluentSerializer()

    # Translations
    Translation = apps.get_model('base', 'Translation')
    translations = Translation.objects.filter(entity__resource__format='ftl')
    translations_to_update = []

    for t in translations:
        current = t.string
        ast = parser.parse_entry(current)
        ast.comment = None
        t.string = serializer.serialize_entry(ast)

        if t.string != current:
            translations_to_update.append(t)

    bulk_update(translations_to_update, update_fields=['string'])

    # Entities
    Entity = apps.get_model('base', 'Entity')
    entities = Entity.objects.filter(resource__format='ftl')
    entities_to_update = []

    for e in entities:
        current = e.string
        ast = parser.parse_entry(current)
        ast.comment = None
        e.string = serializer.serialize_entry(ast)

        if e.string != current:
            entities_to_update.append(e)

    bulk_update(entities_to_update, update_fields=['string'])

    # Translation Memory Entries
    TranslationMemoryEntry = apps.get_model('base', 'TranslationMemoryEntry')
    tmes = TranslationMemoryEntry.objects.filter(entity__resource__format='ftl')
    tmes_to_update = []

    for tme in tmes:
        current_source = tme.source
        ast = parser.parse_entry(current_source)
        ast.comment = None
        tme.source = serializer.serialize_entry(ast)

        current_target = tme.target
        ast = parser.parse_entry(current_target)
        ast.comment = None
        tme.target = serializer.serialize_entry(ast)

        if tme.source != current_source or tme.target != current_target:
            tmes_to_update.append(tme)

    bulk_update(tmes_to_update, update_fields=['source', 'target'])


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0138_index_on_translationmemoryentry'),
    ]

    operations = [
        migrations.RunPython(
            remove_comments_from_ftl_translations,
            migrations.RunPython.noop
        )
    ]
