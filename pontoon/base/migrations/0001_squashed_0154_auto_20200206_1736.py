# Generated by Django 2.2.11 on 2021-02-25 06:22

import dirtyfields.dirtyfields
from django.conf import settings
import django.contrib.postgres.fields
from django.contrib.postgres.operations import CreateExtension
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import pontoon.base.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0007_alter_validators_add_error_messages"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Entity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("string", models.TextField()),
                ("string_plural", models.TextField(blank=True)),
                ("key", models.TextField(blank=True)),
                ("comment", models.TextField(blank=True)),
                ("group_comment", models.TextField(blank=True)),
                ("resource_comment", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("source", jsonfield.fields.JSONField(blank=True, default=list)),
                ("obsolete", models.BooleanField(default=False)),
                ("word_count", models.PositiveIntegerField(default=0)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_obsoleted", models.DateTimeField(blank=True, null=True)),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Locale",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_strings", models.PositiveIntegerField(default=0)),
                ("approved_strings", models.PositiveIntegerField(default=0)),
                ("fuzzy_strings", models.PositiveIntegerField(default=0)),
                ("strings_with_errors", models.PositiveIntegerField(default=0)),
                ("strings_with_warnings", models.PositiveIntegerField(default=0)),
                ("unreviewed_strings", models.PositiveIntegerField(default=0)),
                ("code", models.CharField(max_length=20, unique=True)),
                (
                    "google_translate_code",
                    models.CharField(
                        blank=True,
                        help_text='\n        Google Translate maintains its own list of\n        <a href="https://translate.google.com/intl/en/about/languages/">\n        supported locales</a>. Choose a matching locale from the list or leave blank to disable\n        support for Google Cloud Translation machine translation service.\n        ',
                        max_length=20,
                    ),
                ),
                (
                    "ms_translator_code",
                    models.CharField(
                        blank=True,
                        help_text='\n        Microsoft Translator maintains its own list of\n        <a href="https://docs.microsoft.com/en-us/azure/cognitive-services/translator/languages">\n        supported locales</a>. Choose a matching locale from the list or leave blank to disable\n        support for Microsoft Translator machine translation service.\n        ',
                        max_length=20,
                    ),
                ),
                (
                    "ms_terminology_code",
                    models.CharField(
                        blank=True,
                        help_text="\n        Microsoft Terminology uses language codes that include both the language and\n        the country/region. Choose a matching locale from the list or leave blank to disable support\n        for Microsoft terminology:\n\n        af-za, am-et, ar-dz, ar-eg, ar-sa, as-in, az-latn-az, be-by, bg-bg, bn-bd, bn-in,\n        bs-cyrl-ba, bs-latn-ba, ca-es, ca-es-valencia, chr-cher-us, cs-cz, cy-gb, da-dk, de-at,\n        de-ch, de-de, el-gr, en-au, en-ca, en-gb, en-hk, en-ie, en-in, en-my, en-ng, en-nz, en-ph,\n        en-pk, en-sg, en-tt, en-us, en-za, es-ar, es-bo, es-cl, es-co, es-cr, es-do, es-ec, es-es,\n        es-gt, es-hn, es-mx, es-ni, es-pa, es-pe, es-pr, es-py, es-sv, es-us, es-uy, es-ve, et-ee,\n        eu-es, fa-ir, fi-fi, fil-ph, fo-fo, fr-be, fr-ca, fr-ch, fr-dz, fr-fr, fr-ma, fr-tn,\n        fuc-latn-sn, ga-ie, gd-gb, gl-es, gu-in, guc-ve, ha-latn-ng, he-il, hi-in, hr-hr, hu-hu,\n        hy-am, id-id, ig-ng, is-is, it-ch, it-it, iu-latn-ca, ja-jp, ka-ge, kk-kz, km-kh, kn-in,\n        ko-kr, kok-in, ku-arab-iq, ky-kg, lb-lu, lo-la, lt-lt, lv-lv, mi-nz, mk-mk, ml-in, mn-mn,\n        mr-in, ms-bn, ms-my, mt-mt, my-mm, nb-no, ne-np, nl-be, nl-nl, nn-no, nso-za, or-in,\n        pa-arab-pk, pa-in, pl-pl, prs-af, ps-af, pt-br, pt-pt, quc-latn-gt, quz-pe, ro-md, ro-ro,\n        ru-kz, ru-ru, rw-rw, sd-arab-pk, si-lk, sk-sk, sl-si, sp-xl, sq-al, sr-cyrl-ba, sr-cyrl-rs,\n        sr-latn-me, sr-latn-rs, sv-se, sw-ke, ta-in, te-in, tg-cyrl-tj, th-th, ti-et, tk-tm, tl-ph,\n        tn-za, tr-tr, tt-ru, ug-cn, uk-ua, ur-pk, uz-cyrl-uz, uz-latn-uz, vi-vn, wo-sn, xh-za,\n        yo-ng, zh-cn, zh-hk, zh-sg, zh-tw, zu-za\n        ",
                        max_length=20,
                    ),
                ),
                (
                    "transvision",
                    models.BooleanField(
                        default=False,
                        help_text='\n        Enable Machinery suggestions from <a href="https://transvision.mozfr.org/">Transvision</a>.\n        Only useful for locales that don\'t translate all projects on Pontoon.\n    ',
                    ),
                ),
                (
                    "db_collation",
                    models.CharField(
                        blank=True,
                        help_text="\n        Some of locales require to use different database collation than default ('en_US').\n\n        <strong>Use with caution, because it may brake the search for this locale.</strong>\n        ",
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                (
                    "plural_rule",
                    models.CharField(
                        blank=True,
                        help_text='\n        Plural rule is part of the plurals header in\n        <a href="https://www.gnu.org/software/gettext/manual/gettext.html#Plural-forms">\n        Gettext PO files\n        </a>,\n        that follows the <i>plural=</i> string, without the trailing semicolon.\n        E.g. (n != 1)\n        ',
                        max_length=512,
                    ),
                ),
                (
                    "cldr_plurals",
                    models.CharField(
                        blank=True,
                        help_text='\n        A comma separated list of\n        <a href="http://www.unicode.org/cldr/charts/dev/supplemental/language_plural_rules.html">\n        CLDR plural rules</a>, where 0 represents zero, 1 one, 2 two, 3 few, 4 many, and 5 other.\n        E.g. 1,5\n        ',
                        max_length=11,
                        validators=[pontoon.base.models.validate_cldr],
                        verbose_name="CLDR Plurals",
                    ),
                ),
                (
                    "script",
                    models.CharField(
                        default="Latin",
                        help_text='\n        The script used by this locale. Find it in\n        <a\n        href="http://www.unicode.org/cldr/charts/latest/supplemental/languages_and_scripts.html">\n        CLDR Languages and Scripts</a>.\n        ',
                        max_length=128,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("ltr", "left-to-right"), ("rtl", "right-to-left")],
                        default="ltr",
                        help_text='\n        Writing direction of the script. Set to "right-to-left" if "rtl" value\n        for the locale script is set to "YES" in\n        <a href="https://github.com/unicode-cldr/cldr-core/blob/master/scriptMetadata.json">\n        CLDR scriptMetadata.json</a>.\n        ',
                        max_length=3,
                    ),
                ),
                (
                    "population",
                    models.PositiveIntegerField(
                        default=0,
                        help_text='\n        Number of native speakers. Find locale code in CLDR territoryInfo.json:\n        https://github.com/unicode-cldr/cldr-core/blob/master/supplemental/territoryInfo.json\n        and multiply its "_populationPercent" with the territory "_population".\n        Repeat if multiple occurrences of locale code exist and sum products.\n        ',
                    ),
                ),
                ("team_description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["name", "code"],
                "permissions": (
                    ("can_translate_locale", "Can add translations"),
                    ("can_manage_locale", "Can manage locale"),
                ),
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_strings", models.PositiveIntegerField(default=0)),
                ("approved_strings", models.PositiveIntegerField(default=0)),
                ("fuzzy_strings", models.PositiveIntegerField(default=0)),
                ("strings_with_errors", models.PositiveIntegerField(default=0)),
                ("strings_with_warnings", models.PositiveIntegerField(default=0)),
                ("unreviewed_strings", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=128, unique=True)),
                ("slug", models.SlugField(unique=True)),
                (
                    "data_source",
                    models.CharField(
                        choices=[
                            ("repository", "Repository"),
                            ("database", "Database"),
                        ],
                        default="repository",
                        max_length=255,
                    ),
                ),
                (
                    "can_be_requested",
                    models.BooleanField(
                        default=True,
                        help_text="\n        Allow localizers to request the project for their team.\n    ",
                    ),
                ),
                (
                    "configuration_file",
                    models.CharField(
                        blank=True,
                        help_text="\n        A path to the optional project configuration file, relative to the\n        source string repository.\n        ",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "disabled",
                    models.BooleanField(
                        default=False,
                        help_text="\n        Hide project from the UI and only keep it accessible from the admin.\n        Disable the project instead of deleting it to keep translation memory\n        and attributions. Also prevents project from syncing with VCS.\n    ",
                    ),
                ),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_disabled", models.DateTimeField(blank=True, null=True)),
                (
                    "sync_disabled",
                    models.BooleanField(
                        default=False,
                        help_text="\n        Prevent project from syncing with VCS.\n    ",
                    ),
                ),
                (
                    "system_project",
                    models.BooleanField(
                        default=False,
                        help_text="\n        System projects are built into Pontoon. They are accessible from the\n        translate view, but hidden from dashboards.\n    ",
                    ),
                ),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "width",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="\n        Default website (iframe) width in pixels.\n        If set, sidebar will be opened by default.\n    ",
                        null=True,
                    ),
                ),
                (
                    "links",
                    models.BooleanField(
                        default=False,
                        verbose_name="Keep links on the project website clickable",
                    ),
                ),
                (
                    "langpack_url",
                    models.URLField(
                        blank=True,
                        help_text="\n        URL pattern for downloading language packs. Leave empty if language packs\n        not available for the project. Supports {locale_code} wildcard.\n    ",
                        null=True,
                        verbose_name="Language pack URL",
                    ),
                ),
                ("info", models.TextField(blank=True, verbose_name="Project info")),
                ("deadline", models.DateField(blank=True, null=True)),
                (
                    "priority",
                    models.IntegerField(
                        choices=[
                            (1, "Lowest"),
                            (2, "Low"),
                            (3, "Normal"),
                            (4, "High"),
                            (5, "Highest"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "admin_notes",
                    models.TextField(
                        blank=True,
                        help_text="\n        Notes only visible in Administration\n    ",
                    ),
                ),
                ("tags_enabled", models.BooleanField(default=True)),
                (
                    "pretranslation_enabled",
                    models.BooleanField(
                        default=False,
                        help_text="\n        Pretranslate project strings using automated sources\n        like translation memory and machine translation.\n        ",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        blank=True,
                        help_text="\n        L10n driver in charge of the project\n    ",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contact_for",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": (("can_manage_project", "Can manage project"),),
                "ordering": ("pk",),
            },
        ),
        migrations.CreateModel(
            name="Resource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.TextField()),
                ("total_strings", models.PositiveIntegerField(default=0)),
                ("obsolete", models.BooleanField(default=False)),
                (
                    "date_created",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("date_obsoleted", models.DateTimeField(blank=True, null=True)),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("dtd", "dtd"),
                            ("ftl", "ftl"),
                            ("inc", "inc"),
                            ("ini", "ini"),
                            ("json", "json"),
                            ("lang", "lang"),
                            ("po", "po"),
                            ("properties", "properties"),
                            ("xlf", "xliff"),
                            ("xliff", "xliff"),
                            ("xml", "xml"),
                        ],
                        max_length=20,
                        verbose_name="Format",
                    ),
                ),
                ("deadline", models.DateField(blank=True, null=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="base.Project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TranslatedResource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_strings", models.PositiveIntegerField(default=0)),
                ("approved_strings", models.PositiveIntegerField(default=0)),
                ("fuzzy_strings", models.PositiveIntegerField(default=0)),
                ("strings_with_errors", models.PositiveIntegerField(default=0)),
                ("strings_with_warnings", models.PositiveIntegerField(default=0)),
                ("unreviewed_strings", models.PositiveIntegerField(default=0)),
                (
                    "locale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translatedresources",
                        to="base.Locale",
                    ),
                ),
                (
                    "resource",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translatedresources",
                        to="base.Resource",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subpage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.Project"
                    ),
                ),
                ("resources", models.ManyToManyField(blank=True, to="base.Resource")),
            ],
        ),
        migrations.CreateModel(
            name="Translation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("string", models.TextField()),
                ("plural_form", models.SmallIntegerField(blank=True, null=True)),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                ("active", models.BooleanField(default=False)),
                ("fuzzy", models.BooleanField(default=False)),
                ("approved", models.BooleanField(default=False)),
                ("approved_date", models.DateTimeField(blank=True, null=True)),
                ("unapproved_date", models.DateTimeField(blank=True, null=True)),
                ("rejected", models.BooleanField(default=False)),
                ("rejected_date", models.DateTimeField(blank=True, null=True)),
                ("unrejected_date", models.DateTimeField(blank=True, null=True)),
                (
                    "extra",
                    jsonfield.fields.JSONField(
                        default=pontoon.base.models.extra_default
                    ),
                ),
                (
                    "approved_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_translations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.Entity"
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.Locale"
                    ),
                ),
                (
                    "rejected_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rejected_translations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unapproved_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="unapproved_translations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unrejected_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="unrejected_translations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name="translatedresource",
            name="latest_translation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="resource_latest",
                to="base.Translation",
            ),
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quality_checks", models.BooleanField(default=True)),
                ("force_suggestions", models.BooleanField(default=False)),
                (
                    "custom_homepage",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "preferred_source_locale",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("tour_status", models.IntegerField(default=0)),
                (
                    "locales_order",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.PositiveIntegerField(),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChangedEntityLocale",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("when", models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("git", "Git"), ("hg", "HG"), ("svn", "SVN")],
                        default="git",
                        max_length=255,
                    ),
                ),
                ("url", models.CharField(max_length=2000, verbose_name="URL")),
                (
                    "branch",
                    models.CharField(
                        blank=True, max_length=2000, verbose_name="Branch"
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        blank=True,
                        max_length=2000,
                        verbose_name="Public Repository Website",
                    ),
                ),
                (
                    "permalink_prefix",
                    models.CharField(
                        blank=True,
                        help_text="\n        A URL prefix for downloading localized files. For GitHub repositories,\n        select any localized file on GitHub, click Raw and replace locale code\n        and the following bits in the URL with `{locale_code}`.\n    ",
                        max_length=2000,
                        verbose_name="Download prefix",
                    ),
                ),
                (
                    "last_synced_revisions",
                    jsonfield.fields.JSONField(blank=True, default=dict),
                ),
                (
                    "source_repo",
                    models.BooleanField(
                        default=False,
                        help_text='\n        If true, this repo contains the source strings directly in the\n        root of the repo. Checkouts of this repo will have "templates"\n        appended to the end of their path so that they are detected as\n        source directories.\n    ',
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repositories",
                        to="base.Project",
                    ),
                ),
            ],
            options={"ordering": ["id"],},
        ),
        migrations.CreateModel(
            name="ProjectLocale",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_strings", models.PositiveIntegerField(default=0)),
                ("approved_strings", models.PositiveIntegerField(default=0)),
                ("fuzzy_strings", models.PositiveIntegerField(default=0)),
                ("strings_with_errors", models.PositiveIntegerField(default=0)),
                ("strings_with_warnings", models.PositiveIntegerField(default=0)),
                ("unreviewed_strings", models.PositiveIntegerField(default=0)),
                ("readonly", models.BooleanField(default=False)),
                ("has_custom_translators", models.BooleanField(default=False)),
                (
                    "latest_translation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="project_locale_latest",
                        to="base.Translation",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_locale",
                        to="base.Locale",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="project_locale",
                        to="base.Project",
                    ),
                ),
                (
                    "translators_group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="projectlocales",
                        to="auth.Group",
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_translate_project_locale", "Can add translations"),
                ),
            },
        ),
        migrations.AddField(
            model_name="project",
            name="latest_translation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="project_latest",
                to="base.Translation",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="locales",
            field=models.ManyToManyField(
                through="base.ProjectLocale", to="base.Locale"
            ),
        ),
        migrations.CreateModel(
            name="TranslationMemoryEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source", models.TextField()),
                ("target", models.TextField()),
                (
                    "entity",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="memory_entries",
                        to="base.Entity",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.Locale"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="memory_entries",
                        to="base.Project",
                    ),
                ),
                (
                    "translation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="memory_entries",
                        to="base.Translation",
                    ),
                ),
            ],
        ),
        CreateExtension("fuzzystrmatch"),
        migrations.RunSQL(
            "CREATE INDEX source_length_idx ON base_translationmemoryentry(CHAR_LENGTH(source))",
            "DROP INDEX source_length_idx",
        ),
        migrations.CreateModel(
            name="ExternalResource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32)),
                ("url", models.URLField(blank=True, verbose_name="URL")),
                (
                    "locale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.Locale",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.Project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PermissionChangelog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[("added", "Added"), ("removed", "Removed")],
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="auth.Group"
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="changed_permissions_log",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "performed_on",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="permisions_log",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "User permissions log",
                "verbose_name_plural": "Users permissions logs",
                "ordering": ("pk",),
            },
        ),
        migrations.AddField(
            model_name="locale",
            name="latest_translation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="locale_latest",
                to="base.Translation",
            ),
        ),
        migrations.AddField(
            model_name="locale",
            name="managers_group",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="managed_locales",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="locale",
            name="translators_group",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="translated_locales",
                to="auth.Group",
            ),
        ),
        migrations.AddField(
            model_name="entity",
            name="changed_locales",
            field=models.ManyToManyField(
                help_text="List of locales in which translations for this entity have changed since the last sync.",
                through="base.ChangedEntityLocale",
                to="base.Locale",
            ),
        ),
        migrations.AddField(
            model_name="entity",
            name="resource",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entities",
                to="base.Resource",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("content", models.TextField()),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "entity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="base.Entity",
                    ),
                ),
                (
                    "locale",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="base.Locale",
                    ),
                ),
                (
                    "translation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="base.Translation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="changedentitylocale",
            name="entity",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.Entity"
            ),
        ),
        migrations.AddField(
            model_name="changedentitylocale",
            name="locale",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.Locale"
            ),
        ),
        migrations.AddConstraint(
            model_name="translation",
            constraint=models.UniqueConstraint(
                condition=models.Q(active=True),
                fields=("entity", "locale", "plural_form", "active"),
                name="entity_locale_plural_form_active",
            ),
        ),
        migrations.AddConstraint(
            model_name="translation",
            constraint=models.UniqueConstraint(
                condition=models.Q(("active", True), ("plural_form__isnull", True)),
                fields=("entity", "locale", "active"),
                name="entity_locale_active",
            ),
        ),
        migrations.AlterIndexTogether(
            name="translation",
            index_together={
                ("entity", "locale", "fuzzy"),
                ("entity", "user", "approved", "fuzzy"),
                ("entity", "locale", "approved"),
                ("locale", "user", "entity"),
                ("date", "locale"),
            },
        ),
        migrations.AlterUniqueTogether(
            name="translatedresource", unique_together={("locale", "resource")},
        ),
        migrations.AlterUniqueTogether(
            name="resource", unique_together={("project", "path")},
        ),
        migrations.AlterUniqueTogether(
            name="repository", unique_together={("project", "url")},
        ),
        migrations.AlterUniqueTogether(
            name="projectlocale", unique_together={("project", "locale")},
        ),
        migrations.AlterIndexTogether(
            name="entity", index_together={("resource", "obsolete", "string_plural")},
        ),
        migrations.AlterUniqueTogether(
            name="changedentitylocale", unique_together={("entity", "locale")},
        ),
    ]
